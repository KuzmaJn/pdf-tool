name: 'User authentication'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/pdf/merge
    metadata:
      groupName: 'User authentication'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pdf_files:
        name: pdf_files
        description: 'Must be a file.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      pdf_files:
        - null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/pdf/split
    metadata:
      groupName: 'User authentication'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pdf:
        name: pdf
        description: 'Must be a file.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      split_page:
        name: split_page
        description: 'Must be at least 1.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      split_page: 16
    fileParameters:
      pdf: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/pdf/unlock
    metadata:
      groupName: 'User authentication'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pdf:
        name: pdf
        description: 'Must be a file.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: '|]|{+-'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      password: '|]|{+-'
    fileParameters:
      pdf: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/pdf/lock
    metadata:
      groupName: 'User authentication'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pdf:
        name: pdf
        description: 'Must be a file.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: '|]|{+-'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      password: '|]|{+-'
    fileParameters:
      pdf: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/pdf/rotate
    metadata:
      groupName: 'User authentication'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pdf:
        name: pdf
        description: 'Must be a file.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page_number:
        name: page_number
        description: 'Must be at least 1.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      rotation_angle:
        name: rotation_angle
        description: ''
        required: true
        example: '180'
        type: integer
        enumValues:
          - '90'
          - '180'
          - '270'
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      page_number: 16
      rotation_angle: '180'
    fileParameters:
      pdf: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/pdf/removePage
    metadata:
      groupName: 'User authentication'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pdf:
        name: pdf
        description: 'Must be a file.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page_number:
        name: page_number
        description: 'Must be at least 1.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      page_number: 16
    fileParameters:
      pdf: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/pdf/extractPage
    metadata:
      groupName: 'User authentication'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pdf:
        name: pdf
        description: 'Must be a file.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page_number:
        name: page_number
        description: 'Must be at least 1.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      page_number: 16
    fileParameters:
      pdf: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/pdf/numberPages
    metadata:
      groupName: 'User authentication'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pdf:
        name: pdf
        description: 'Must be a file.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      position:
        name: position
        description: ''
        required: true
        example: top-left
        type: string
        enumValues:
          - bottom-center
          - bottom-right
          - bottom-left
          - top-center
          - top-right
          - top-left
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_number:
        name: start_number
        description: 'Must be at least 1.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      position: top-left
      start_number: 16
    fileParameters:
      pdf: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/pdf/create
    metadata:
      groupName: 'User authentication'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      content:
        name: content
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      orientation:
        name: orientation
        description: ''
        required: true
        example: landscape
        type: string
        enumValues:
          - portrait
          - landscape
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: b
      content: architecto
      orientation: landscape
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/pdf/addWatermark
    metadata:
      groupName: 'User authentication'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pdf:
        name: pdf
        description: 'Must be a file.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      text:
        name: text
        description: 'Must not be greater than 100 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      text: b
    fileParameters:
      pdf: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer'
    controller: null
    method: null
    route: null
    custom: []
